---
title: "Prova 1 - 06/10/2023"
format: 
  html:
    embed-resources: true
editor: 
  markdown: 
    wrap: 72
---

```{r setup}
knitr::opts_chunk$set(error = T)
```

## Carregar Pacotes

```{r}
library(tidyverse)
library(yfR)
library(afedR3)
```

## Questão 1

```{r}


```

## Questão 2

```{r}


```

## Questão 3

```{r}

format(Sys.Date(),"%d/%m/%Y")
```

## Questão 4

```{r}

```

## Questão 5

```{r}
my.idx <- -45:52
x <- my.idx[5]
y <- my.idx[length(my.idx)-2]

x

y
```

## Questão 6

```{r error = T}
my.vec <- runif(100)
my.vec*'a'


my.vec[101]

my.vec + runif(101)

my.vec[-1]


my.vec + runif(100)
```

## Questão 7

## \[,1\] \[,2\] \[,3\] \[,4\]

## \[1,\] 0.86822814 0.5275015 0.01951448 0.6420475

## \[2,\] 0.06092886 0.0299027 0.14504514 0.6464541

## \[3,\] 0.56391745 0.9668421 0.33071406 0.9204697

## \[4,\] 0.33811714 0.8440016 0.02820044 0.1266046

## \[5,\] 0.58451142 0.2607341 0.03164408 0.1141950

## \[6,\] 0.31125581 0.1677927 0.39083509 0.5296030

```{r}
# my.nrows <- nrow(M)
# my.ncols <- ncol(M)
# sol.q <- M[my.ncols-1,my.ncols]

sol.q <- M[4-1,4]
```

## Questão 8

## \[,1\] \[,2\]

## \[1,\] 0.8207622 0.5443170

## \[2,\] 0.7740115 0.4805016

## \[3,\] 0.4007406 0.3027780

## \[4,\] 0.5450935 0.2389064

## \[5,\] 0.3081531 0.8049189

## \[6,\] 0.7872259 0.2843541

```{r}
x <- c(0.8207622, 0.5443170,
0.7740115, 0.4805016,
0.4007406, 0.3027780,
0.5450935, 0.2389064,
0.3081531, 0.8049189,
0.7872259, 0.2843541)

M <- matrix(x, nrow = 6, ncol =2)
M

dim(M)[1]
ncol(M) 
length(M)
```

## Questão 9

```{r}
set.seed(45)
y <- sample(1:10, 3)
y <- y[c(1,3)]
x <- y[2]
x
```

## Questão 10

```{r}
arquivo <- data_path('EX_football-br.csv')

df_foot <- read_csv(arquivo)

gols_br <- df_foot |> 
  pull(GolsBR) |> 
  sum()
  
gols_adv <- df_foot |> 
  pull(GolsAdv) |> 
  sum()
  
gols_br - gols_adv

```

## Questão 11

```{r}
arquivo <- data_path('EX_ibovespa.rds')

df <- readRDS(arquivo)
head(df)


ret_final <- df |> 
  filter(ref_date == max(ref_date)) |> 
  pull(cumret_adjusted_prices)

ret_inicial <- df |> 
  filter(ref_date == min(ref_date)) |> 
  pull(cumret_adjusted_prices)

(ret_final/ret_inicial - 1)*100

```

## Questão 12

```{r}
arquivo <- data_path('EX_ibovespa.rds')

df <- readRDS(arquivo)

df <- df |> 
  arrange(ref_date) |> 
  mutate(retorno_lag = lag(ret_adjusted_prices))

x <- df |> 
  mutate(sinal= retorno_lag * ret_adjusted_prices) |> 
  filter(sinal > 0) #|>
  # de forma mais explicita
  # filter((retorno_lag > 0 & ret_adjusted_prices > 0) |
  #          (retorno_lag < 0 & ret_adjusted_prices < 0))

x |> nrow()


```

## Questão 13

::: callout-important
## Será anulada
:::


```{r}

```

## Questão 14

```{r}
afedR3::data_list()
arquivo <- data_path('CH11_grunfeld.csv')

df <- read_csv(arquivo)

df |> nrow()

```

## Questão 15

```{r}

arquivo <- data_path('EX_B3-stocks.rds')

df <- readRDS(arquivo) |> 
  filter(ticker == 'USIM5.SA')


max(df$price_adjusted)
```

## Questão 16

```{r}

arquivo <- data_path('EX_B3-stocks.rds')

df <- readRDS(arquivo) 

df |> 
  mutate(letra_L = str_detect(ticker, 'L')) |> 
  filter(letra_L == TRUE) |> 
  pull(ticker) |> 
  unique() |> 
  length()


```

## Questão 17

```{r}
set.seed(17)
x <- sample (1:3, size = 5, replace = T)
y <- sample (1:3, size = 5, replace = T)

sum(x * y)

```

## Questão 18

Defina outro objeto chamado seq_2 contendo uma sequência de tamanho 1000, com valores entre 0 e 100. Qual é o desvio padrão (função sd) dessa sequência?

```{r}
seq_2 <- seq(0, 100, length.out = 1000)
sd(seq_2)

```

## Questão 19

```{r}

## questao 28 (atividade de aula 1)
i <- 1:100
x <- c()
for (j in i){
  cat(j)
  calculo <- ((-1)^(j + 1))/(2*j - 1)

  x <- c(x, calculo)

}

sum(x)

```

## Questão 20

```{r}
nascimento <- as.Date('1984-08-21')

anos_vida <- seq(nascimento, nascimento + 90 * 365, by = '1 year')

dias_semana <- weekdays(anos_vida)

n_aniversarios <- sum(
  stringr::str_to_lower(dias_semana) %in% c('sábado', "domingo")
  )

n_aniversarios
```

## Questão 21

mesma da questao 13 atividade 3
```{r}



```

## Questão 22

```{r}
arquivo <- data_path('EX_football-br.csv')

df_foot <- read_csv(arquivo)

df_foot <- df_foot |> 
  mutate(resultado = case_when(GolsBR > GolsAdv ~ 'V',
                               GolsAdv > GolsBR ~ 'D',
                               GolsAdv == GolsBR ~ 'E',
                               .default = NA))

df_foot |>
  filter(resultado == 'V') |> 
  group_by(Adversario) |> 
  count() |> 
  arrange(-n)


x <- df_foot |> 
  filter(Adversario == 'Chile' & resultado =='V') |> 
  filter(Data == max(Data))
  
x
```

## Questão 23

::: callout-important
## Será anulada
:::

```{r}

```

## Questão 24

```{r}
arquivo <- data_path('EX_TD-data.rds')

df <- readRDS(arquivo)
df$ref.date |> class()

df |> 
  filter(ref.date > as.Date('2020-12-21')) |> 
  nrow()
  

```

## Questão 25

Mesma da questão 27 da atividade 3

```{r}
arquivo <- data_path('EX_TD-data.rds')

df <- readRDS(arquivo)

df_filtrado <- df |> 
  filter(
    asset.code %in% c(
      'NTN-B Principal 150545',
      'NTN-B Principal 150826',
      'LFT 010325',
      'LTN 010117',
      'LFT 010323',
      'LTN 010118',
      'LTN 010129',
      'LFT 070317',
      'LTN 010122',
      'LTN 010121'
    )
  )

resumo <- df_filtrado |> 
  group_by(asset.code) |> 
  mutate(preco_minimo = min(price.bid),
         preco_maximo = max(price.bid)) |> 
  summarise(preco_minimo = first(preco_minimo, na_rm = T),
            preco_maximo = first(preco_maximo, na_rm = T)) |> 
  mutate(volatilidade = preco_maximo - preco_minimo)

resumo |> 
  pull(volatilidade) |> 
  sum()

```

## Questão 26

mesma da questão 28 da atividade 3

```{r}
arquivo <- data_path('EX_TD-data.rds')

df <- readRDS(arquivo)

df_filtrado <- df |> 
  filter(asset.code %in% c(
      'NTN-B Principal 150535',
      'LFT 070317',
      'LTN 010129',
      'LTN 010116',
      'LFT 070315',
      'LTN 010117',
      'LTN 010122',
      'NTN-B Principal 150545',
      'LFT 010924',
      'LFT 010323'
    )
  )

df_filtrado |> 
  mutate(classe = substr(asset.code, 1, 5)) |> 
  pull(classe) |>
  table() |> 
  as.data.frame() |> 
  arrange(-Freq)

```

## Questão 27

Mesma da questão 34 da atividade 3

```{r}
arquivo <- data_path('EX_B3-stocks.rds')

df <- readRDS(arquivo)

df_filtrado <- df |> 
    filter(ticker %in% c(
      'YDUQ3.SA',
      'USIM5.SA',
      'QUAL3.SA',
      'CSAN3.SA',
      'RAIL3.SA'
    )) |> 
  mutate(dia_semana = weekdays(ref_date))

df_filtrado |> 
  filter(dia_semana == 'quarta-feira') |> 
  nrow()

```

## Questão 28

Mesma da questão 37 da atividade 3

```{r}
arquivo <- data_path('EX_ibovespa.rds')

df <- readRDS(arquivo)

df |> 
  arrange(-ret_adjusted_prices) |> 
  head(22) |> 
  pull(ret_adjusted_prices) |> 
  sum()
```

## Questão 29

Mesma da questão 38 da atividade 3

```{r}
arquivo <- data_path('EX_B3-stocks.rds')

df_b3 <- readRDS(arquivo)

arquivo2 <- data_path('EX_ibovespa.rds')

df_ibov <- readRDS(arquivo2)

df_filtrado <- df_b3 |> 
    filter(!ticker %in% c(
      'PRIO3.SA', 
      'GGBR4.SA', 
      'ENGI11.SA', 
      'YDUQ3.SA', 
      'BBDC3.SA', 
      'SANB11.SA', 
      'MRFG3.SA', 
      'USIM5.SA', 
      'ECOR3.SA', 
      'BRML3.SA'
    ))

df_ibov_filtrado <- df_ibov |> 
  select(ref_date, ret_adjusted_prices) |> 
  rename(ret_ibov = ret_adjusted_prices)

df_filtrado <- df_filtrado |> 
  arrange(ticker, ref_date) |> 
  group_by(ticker) |> 
  mutate(retorno = price_adjusted/lag(price_adjusted) - 1)

df_filtrado2 <- left_join(df_filtrado, df_ibov_filtrado, 
               by = "ref_date")

df_filtrado2 <- df_filtrado2 |> 
  mutate(retorno_excessivo = ret_adjusted_prices - ret_ibov)

df_filtrado2 |> 
  pull(retorno_excessivo) |> 
  sum(na.rm = T)


```

## Questão 30

Mesma da questão 39 da atividade 3

```{r}
arquivo <- data_path('EX_B3-stocks.rds')

df_stocks <- readRDS(arquivo)

acoes <- c('BBDC3.SA',	
           'BBDC4.SA',	
           'BBSE3.SA',	
           'BRFS3.SA',	
           'BRML3.SA',	
           'CSAN3.SA',	
           'CSNA3.SA',	
           'CYRE3.SA',	
           'ECOR3.SA',	
           'EMBR3.SA',	
           'ENBR3.SA',	
           'ENGI11.SA',
           'GGBR4.SA',	
           'JBSS3.SA',	
           'LREN3.SA',	
           'MRFG3.SA',	
           'PRIO3.SA',	
           'QUAL3.SA',	
           'RADL3.SA',	
           'RAIL3.SA',	
           'SANB11.SA',	
           'SULA11.SA',	
           'TOTS3.SA',	
           'USIM5.SA',	
           'YDUQ3.SA'	
)

qtde <- c(26, 14, 47, 24, 10, 32, 31, 15, 46, 46, 22, 
          10, 12, 26, 19, 47, 39, 17, 31, 15, 41, 43,
          48, 34, 24)

data_compra <- c(
  '2018-12-26',
  '2019-03-01',
  '2018-06-25',
  '2019-07-05',
  '2020-03-02',
  '2019-06-14',
  '2019-03-12',
  '2019-09-12',
  '2019-01-30',
  '2018-08-24',
  '2019-10-16',
  '2018-07-18',
  '2019-04-12',
  '2018-01-09',
  '2017-11-10',
  '2019-10-22',
  '2018-04-11',
  '2019-03-28',
  '2019-09-17',
  '2018-08-03',
  '2019-11-19',
  '2018-04-12',
  '2018-03-07',
  '2019-05-13',
  '2018-06-12'
)

data_venda <- c(
  '2020-07-30',
  '2022-02-22',
  '2020-09-23',
  '2021-10-18',
  '2021-04-08',
  '2021-12-06',
  '2021-02-22',
  '2020-12-21',
  '2022-07-21',
  '2021-11-01',
  '2020-10-26',
  '2022-05-19',
  '2021-01-11',
  '2021-09-02',
  '2020-11-12',
  '2022-08-16',
  '2021-09-30',
  '2021-11-30',
  '2022-08-03',
  '2022-06-22',
  '2021-05-20',
  '2021-11-04',
  '2020-09-22',
  '2020-09-15',
  '2021-07-16'
)

retornos <- c()
for(i in 1:length(acoes)){
  
  preco_compra <- df_stocks |> 
    filter(ticker == acoes[i]) |> 
    filter(ref_date == data_compra[i]) |> 
    pull(price_adjusted)
  
  preco_venda <- df_stocks |> 
    filter(ticker == acoes[i]) |> 
    filter(ref_date == data_venda[i]) |> 
    pull(price_adjusted)
  
  
  retorno_acao <- (preco_venda - preco_compra) * qtde[i]
  
  retornos <- append(retornos, retorno_acao)

}

sum(retornos)

```
