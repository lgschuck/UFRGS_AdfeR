---
title: "Aula 4"
format: 
  html:
    embed-resources: true
---

```{r setup}
knitr::opts_chunk$set(error = T)
```

## Instalar Pacotes 

```{r, eval = F}
install.packages('GetQuandlData')
install.packages('yfR')
install.packages('GetTDData')
install.packages('GetBCBData')
install.packages('GetDFPData2')
install.packages('gt')

quantdl_ID <- readLines('./conf/quantdl_ID.txt')

saveRDS(quantdl_ID, './conf/quantdl_ID.RDS')
```

```{r}
library(tidyverse)
library(GetQuandlData)
library(yfR)
library(GetTDData)
library(GetBCBData)
library(GetDFPData2)
```

## Pacote GetQuandlData

Quandl é um repositório de dados abrangente, fornecendo acesso a uma série de tabelas gratuitas e pagas disponibilizadas por diversas instituições de pesquisa.

```{r}

# set symbol and dates
my_symbol <- c('GOLD' = 'LBMA/GOLD')
first_date <- '1950-01-01'
last_date <- Sys.Date()
my_api_key <- readRDS('./conf/quantdl_ID.RDS')

# get data!
df_quandl <- GetQuandlData::get_Quandl_series(
  id_in = my_symbol,
  api_key = my_api_key, 
  first_date = first_date,
  last_date = last_date
)

# check it
dplyr::glimpse(df_quandl)
```

## Dados de Inflação

```{r}
# databse to get info
db_id <- 'RATEINF'
first_date <- '2015-01-01'
last_date <- Sys.Date()

# get info 
df_db <- get_database_info(db_id, my_api_key)

selected_series <- c('Inflation YOY - USA',
                     'Inflation YOY - Canada',
                     'Inflation YOY - Euro Area',
                     'Inflation YOY - Australia')

# filter selected countries
idx <- df_db$name %in% selected_series
df_db <- df_db[idx, ]

my_id <- df_db$quandl_code
names(my_id) <- df_db$name

df_inflation <- get_Quandl_series(
  id_in = my_id, 
  api_key = my_api_key,
  first_date = first_date,
  last_date = last_date
)

glimpse(df_inflation)
```

## Pacote yfR

Pacote yfR faz a comunicação do R com os dados financeiros disponíveis no Yahoo Finance.

```{r}
# set tickers
my_tickers <- "^BVSP"
first_date <- '2000-01-01'
last_date <- Sys.Date()

df_yf <- yfR::yf_get(tickers = my_tickers,
                     first_date = first_date,
                     last_date = last_date)

dplyr::glimpse(df_yf)
```

### Dados Empresas

```{r}
# set tickers
my_tickers <- c('PETR4.SA', 'CIEL3.SA',
                'GGBR4.SA', 'GOAU4.SA')
first_date <- '2015-01-01'
last_date <- Sys.Date()

df_yf <- yfR::yf_get(tickers = my_tickers,
                     first_date = first_date,
                     last_date = last_date)

dplyr::glimpse(df_yf)

summary(df_yf$price_close)

x <- subset(df_yf, subset = ticker == 'CIEL3.SA',
            select = c('ticker','ref_date', 'price_close'))

summary(x)
plot(x$ref_date, x$price_close, main = 'CIELO3')
```

### Dados IBOV

```{r}
# set tickers
df_ibov <- yfR::yf_index_composition("IBOV")

dplyr::glimpse(df_ibov)
```

## Pacote GetTDData

Pacote GetTDData importa os dados de preços e yields de títulos do Tesouro Direto do site do Tesouro Nacional e os organiza para facilitar a análise.

```{r}
asset_codes <- 'LTN'   # Identifier of assets
maturity <- '010121'  # Maturity date as string (ddmmyy)
first_year <- 2015
last_year <- 2023

# download
df_TD <- GetTDData::td_get(asset_codes, 
                           first_year = first_year,
                           last_year = last_year)

dplyr::glimpse(df_TD)

GetTDData::get_td_names()

```

```{r}

# get yield curve
df_yield <- get.yield.curve()

# check result
dplyr::glimpse(df_yield)
```

## Pacote rb3

```{r}

```

## Pacote GetBCBData

Pacote que permite acesso ao Sistema de Séries Temporais (SGS) do Banco Central Brasileiro (BCB).

```{r}
# set ids and dates
id_series <- c(perc_default = 21082)
first_date = '2010-01-01'

# get series from bcb
df_cred <- gbcbd_get_series(id = id_series,
                            first.date = first_date,
                            last.date = Sys.Date(), 
                            use.memoise = FALSE)

# check it
glimpse(df_cred)

plot(df_cred$ref.date, df_cred$value, type = 'l')
```

### Selic

```{r}
my_id <- c('Taxa SELIC' = 432)
first_date <- '2010-01-01'
last_date <- Sys.Date()

df_bcb <- GetBCBData::gbcbd_get_series(
  my_id,
  first.date = first_date, 
  last.date = last_date
)

dplyr::glimpse(df_bcb)

plot(df_bcb$ref.date, df_bcb$value, type = 'l')
```

## Pacote GetDFPData2

Fornece uma interface aberta para todas as demonstrações financeiras distribuídas pela B3 e pela CVM nos sistemas DFP (dados anuais)

```{r}
# get info for companies in B3
df_info <- get_info_companies()

# check it
dplyr::glimpse(df_info)
```

### Dados Grendene

```{r}
id_companies <- 19615
first_year <- 2020
last_year  <- 2022

# download data
l_dfp <- GetDFPData2::get_dfp_data(
  companies_cvm_codes = id_companies,
  type_docs = '*', # get all docs  
  type_format = 'con', # consolidated
  first_year = first_year,
  last_year = last_year
)

dplyr::glimpse(l_dfp)

head(l_dfp$`DF Consolidado - Balanço Patrimonial Ativo`)

```

#### Lucro

```{r}
dre <- l_dfp$`DF Consolidado - Demonstração do Resultado`

id_LL <- "3.11"

LL <- dre |>
  dplyr::filter(CD_CONTA == id_LL) |>
  dplyr::select(DENOM_CIA, DT_REFER, CD_CONTA, VL_CONTA) |>
  dplyr::mutate(VL_CONTA = VL_CONTA * 1000)

LL |>
  gt::gt() |>
  gt::tab_header(paste("Lucro da ", unique(LL$DENOM_CIA))) |>
  gt::fmt_currency(VL_CONTA, currency = "BRL")
```

#### Ebitda

```{r}
id_EBITDA <- "3.05"

EBITDA <- dre |>
  dplyr::filter(CD_CONTA == id_EBITDA) |>
  dplyr::select(DENOM_CIA, DT_REFER, CD_CONTA, VL_CONTA) |>
  dplyr::mutate(VL_CONTA = VL_CONTA * 1000)

EBITDA |>
  gt::gt() |>
  gt::tab_header(paste("EBITDA da ", unique(EBITDA$DENOM_CIA))) |>
  gt::fmt_currency(VL_CONTA, currency = "BRL")
```

### Dados Petrobras

```{r}
id_companies <- 9512
first_year <- 2020
last_year  <- 2022

# download data
l_dfp <- GetDFPData2::get_dfp_data(
  companies_cvm_codes = id_companies,
  type_docs = '*', # get all docs  
  type_format = 'con', # consolidated
  first_year = first_year,
  last_year = last_year
)

dplyr::glimpse(l_dfp)

head(l_dfp$`DF Consolidado - Balanço Patrimonial Ativo`)

```

#### Lucro

```{r}
dre <- l_dfp$`DF Consolidado - Demonstração do Resultado`

id_LL <- "3.11"

LL <- dre |>
  dplyr::filter(CD_CONTA == id_LL) |>
  dplyr::select(DENOM_CIA, DT_REFER, CD_CONTA, VL_CONTA) |>
  dplyr::mutate(VL_CONTA = VL_CONTA * 1000)

LL |>
  gt::gt() |>
  gt::tab_header(paste("Lucro da ", unique(LL$DENOM_CIA))) |>
  gt::fmt_currency(VL_CONTA, currency = "BRL")
```

#### Ebitda

```{r}
id_EBITDA <- "3.05"

EBITDA <- dre |>
  dplyr::filter(CD_CONTA == id_EBITDA) |>
  dplyr::select(DENOM_CIA, DT_REFER, CD_CONTA, VL_CONTA) |>
  dplyr::mutate(VL_CONTA = VL_CONTA * 1000)

EBITDA |>
  gt::gt() |>
  gt::tab_header(paste("EBITDA da ", unique(EBITDA$DENOM_CIA))) |>
  gt::fmt_currency(VL_CONTA, currency = "BRL")
```
